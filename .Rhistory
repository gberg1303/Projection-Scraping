(Fantasy_Points$Extra.Points.Missed*PPR[["kick"]][["Extra.Points.Missed"]])+
(Fantasy_Points$FGM.XP*PPR[["kick"]][["FGM.XP"]])+
(Fantasy_Points$Return.Touchdowns*PPR[["ret"]][["Return.Touchdowns"]])+
(Fantasy_Points$`2PT.Conversion`*PPR[["misc"]][["2PT.Conversion"]])+
(Fantasy_Points$Sacks*PPR[["dst"]][["Sacks"]])+
(Fantasy_Points$Defensive.Interceptions*PPR[["dst"]][["Defensive.Interceptions"]])+
(Fantasy_Points$Fumbles.Recovered*PPR[["dst"]][["Fumbles.Recovered"]])+
(Fantasy_Points$Defensive.Touchdowns*PPR[["dst"]][["Defensive.Touchdowns"]])+
(Fantasy_Points$Points.Allowed*PPR[["dst"]][["Points.Allowed"]])+
(Fantasy_Points$Yards.Allowed*PPR[["dst"]][["Yards.Allowed"]])+
(Fantasy_Points$Safeties*PPR[["dst"]][["Safeties"]])
)
View(Combined_Projections)
View(Fantasy_Points)
View(Fantasy_Points)
### Bind Scoring to Combined Projections
Combined_Projections$Individual.Fantasy.Points <- Fantasy_Points$Individual.Fantasy.Points
rm(Fantasy_Points)
### Create the main function.
# Week = 0 Implies the Preseason Draft Rankikngs
Fantasy_Football_Projections <- function(sources = c("CBS", "ESPN", "FantasySharks", "Sleeper", "Yahoo", "FantasyPros"), Week, Season, Scoring = c("PPR", "Standard", "Custom")) {
### Set Week and Season
assign("week", Week, envir = .GlobalEnv)
assign("season", Season, envir = .GlobalEnv)
### Source the Projection Files
ifelse(sources == "CBS", source(paste0(getwd(), '/Projection Scraping/CBS Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "ESPN", source(paste0(getwd(), '/Projection Scraping/ESPN Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "FantasySharks", source(paste0(getwd(), '/Projection Scraping/FantasySharks Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "Sleeper", source(paste0(getwd(), '/Projection Scraping/Sleeper Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "Yahoo", source(paste0(getwd(), '/Projection Scraping/Yahoo Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "FantasyPros", source(paste0(getwd(), '/Projection Scraping/FantasyPros Projections v1.R'), echo=TRUE), print(sources))
### Load Scoring Settings
source(paste0(getwd(), '/Scoring Settings.R'), echo=TRUE)
### Bind all the projections together
Combined_Projections <- rbind.fill(CBS_Projections, ESPN_Projections, Sleeper_Projections, FantasySharks_Projections, Yahoo_Projections, FantasyPros_Projections)
### Clean Combined Projections
source(paste0(getwd(), '/Calculations/Clean Combined Projections.R'), echo=TRUE)
### Score Fantasy Points Based on League Settings
source(paste0(getwd(), '/Calculations/Individual Fantasy Points.R'), echo=TRUE)
}
Fantasy_Football_Projections(Week = 0, Season = 2019, Scoring = "PPR")
source(paste0(getwd(), '/Projection Scraping/CBS Projections v1.R'), echo=TRUE)
paste0(getwd(), '/Projection Scraping/CBS Projections v1.R'), echo=TRUE)
paste0(getwd(), '/Projection Scraping/CBS Projections v1.R')
### Create the main function.
# Week = 0 Implies the Preseason Draft Rankikngs
Fantasy_Football_Projections <- function(sources = c("CBS", "ESPN", "FantasySharks", "Sleeper", "Yahoo", "FantasyPros"), Week, Season, Scoring = c("PPR", "Standard", "Custom")) {
### Set Week and Season
assign("week", Week, envir = .GlobalEnv)
assign("season", Season, envir = .GlobalEnv)
### Source the Projection Files
ifelse(sources == "CBS", source(paste0(getwd(), '/Scraping Scripts/CBS Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "ESPN", source(paste0(getwd(), '/Scraping Scripts/ESPN Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "FantasySharks", source(paste0(getwd(), '/Scraping Scripts/FantasySharks Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "Sleeper", source(paste0(getwd(), '/Scraping Scripts/Sleeper Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "Yahoo", source(paste0(getwd(), '/Scraping Scripts/Yahoo Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "FantasyPros", source(paste0(getwd(), '/Scraping Scripts/FantasyPros Projections v1.R'), echo=TRUE), print(sources))
### Load Scoring Settings
source(paste0(getwd(), '/Scoring Settings.R'), echo=TRUE)
### Bind all the projections together
Combined_Projections <- rbind.fill(CBS_Projections, ESPN_Projections, Sleeper_Projections, FantasySharks_Projections, Yahoo_Projections, FantasyPros_Projections)
### Clean Combined Projections
source(paste0(getwd(), '/Calculations/Clean Combined Projections.R'), echo=TRUE)
### Score Fantasy Points Based on League Settings
source(paste0(getwd(), '/Calculations/Individual Fantasy Points.R'), echo=TRUE)
}
paste0(getwd(), '/Projection Scraping/CBS Projections v1.R')
Fantasy_Football_Projections(Week = 0, Season = 2019, Scoring = "PPR")
paste0(getwd(), '/Calculations/Invididual Fantasy Points.R')
### Clean Combined Projections
source(paste0(getwd(), '/Calculations/Clean Combined Projections.R'), echo=TRUE)
### Score Fantasy Points Based on League Settings
source(paste0(getwd(), '/Calculations/Invididual Fantasy Points.R'), echo=TRUE)
### Score Fantasy Points Based on League Settings
source(paste0(getwd(), '/Calculations/Invididual Fantasy Points.R'), echo=TRUE)
Fantasy_Football_Projections(Week = 0, Season = 2019, Scoring = "PPR")
### Create the main function.
# Week = 0 Implies the Preseason Draft Rankikngs
Fantasy_Football_Projections <- function(sources = c("CBS", "ESPN", "FantasySharks", "Sleeper", "Yahoo", "FantasyPros"), Week, Season, Scoring = c("PPR", "Standard", "Custom")) {
### Set Week and Season
assign("week", Week, envir = .GlobalEnv)
assign("season", Season, envir = .GlobalEnv)
### Source the Projection Files
ifelse(sources == "CBS", source(paste0(getwd(), '/Scraping Scripts/CBS Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "ESPN", source(paste0(getwd(), '/Scraping Scripts/ESPN Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "FantasySharks", source(paste0(getwd(), '/Scraping Scripts/FantasySharks Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "Sleeper", source(paste0(getwd(), '/Scraping Scripts/Sleeper Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "Yahoo", source(paste0(getwd(), '/Scraping Scripts/Yahoo Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "FantasyPros", source(paste0(getwd(), '/Scraping Scripts/FantasyPros Projections v1.R'), echo=TRUE), print(sources))
### Load Scoring Settings
source(paste0(getwd(), '/Scoring Settings.R'), echo=TRUE)
### Bind all the projections together
Combined_Projections <- rbind.fill(CBS_Projections, ESPN_Projections, Sleeper_Projections, FantasySharks_Projections, Yahoo_Projections, FantasyPros_Projections)
### Clean Combined Projections
source(paste0(getwd(), '/Calculations/Clean Combined Projections.R'), echo=TRUE)
### Score Fantasy Points Based on League Settings
source(paste0(getwd(), '/Calculations/Invididual Fantasy Points.R'), echo=TRUE)
}
Fantasy_Football_Projections(Week = 0, Season = 2019, Scoring = "PPR")
### Create the main function.
# Week = 0 Implies the Preseason Draft Rankikngs
Fantasy_Football_Projections <- function(sources = c("CBS", "ESPN", "FantasySharks", "Sleeper", "Yahoo", "FantasyPros"), Week, Season, Scoring = c("PPR", "Standard", "Custom")) {
### Set Week and Season and Scoring Setting
assign("Scoring", Scoring, envir = .GlobalEnv)
assign("week", Week, envir = .GlobalEnv)
assign("season", Season, envir = .GlobalEnv)
### Source the Projection Files
ifelse(sources == "CBS", source(paste0(getwd(), '/Scraping Scripts/CBS Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "ESPN", source(paste0(getwd(), '/Scraping Scripts/ESPN Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "FantasySharks", source(paste0(getwd(), '/Scraping Scripts/FantasySharks Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "Sleeper", source(paste0(getwd(), '/Scraping Scripts/Sleeper Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "Yahoo", source(paste0(getwd(), '/Scraping Scripts/Yahoo Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "FantasyPros", source(paste0(getwd(), '/Scraping Scripts/FantasyPros Projections v1.R'), echo=TRUE), print(sources))
### Load Scoring Settings
source(paste0(getwd(), '/Scoring Settings.R'), echo=TRUE)
### Bind all the projections together
Combined_Projections <- rbind.fill(CBS_Projections, ESPN_Projections, Sleeper_Projections, FantasySharks_Projections, Yahoo_Projections, FantasyPros_Projections)
### Clean Combined Projections
source(paste0(getwd(), '/Calculations/Clean Combined Projections.R'), echo=TRUE)
### Score Fantasy Points Based on League Settings
source(paste0(getwd(), '/Calculations/Invididual Fantasy Points.R'), echo=TRUE)
}
Fantasy_Football_Projections(Week = 0, Season = 2019, Scoring = "PPR")
View(Combined_Projections)
### Create the main function.
# Week = 0 Implies the Preseason Draft Rankikngs
Fantasy_Football_Projections <- function(sources = c("CBS", "ESPN", "FantasySharks", "Sleeper", "Yahoo", "FantasyPros"), Week, Season, Scoring = c("PPR", "Standard", "Custom"), VOR = c("Standard", "Custom")) {
### Set Week and Season and Scoring Setting
assign("Scoring", Scoring, envir = .GlobalEnv)
assign("VOR", VOR, envir = .GlobalEnv)
assign("week", Week, envir = .GlobalEnv)
assign("season", Season, envir = .GlobalEnv)
### Source the Projection Files
ifelse(sources == "CBS", source(paste0(getwd(), '/Scraping Scripts/CBS Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "ESPN", source(paste0(getwd(), '/Scraping Scripts/ESPN Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "FantasySharks", source(paste0(getwd(), '/Scraping Scripts/FantasySharks Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "Sleeper", source(paste0(getwd(), '/Scraping Scripts/Sleeper Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "Yahoo", source(paste0(getwd(), '/Scraping Scripts/Yahoo Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "FantasyPros", source(paste0(getwd(), '/Scraping Scripts/FantasyPros Projections v1.R'), echo=TRUE), print(sources))
### Load Settings
source(paste0(getwd(), '/Scoring Settings.R'), echo=TRUE)
source(paste0(getwd(), '/Value Over Replacement Settings.R'), echo=TRUE)
### Combine the Projections and Clean Combined Projections
source(paste0(getwd(), '/File Management/Clean Combined Projections.R'), echo=TRUE)
### Score Fantasy Points Based on League Settings
source(paste0(getwd(), '/Calculations/Invididual Fantasy Points.R'), echo=TRUE)
### Average the Statistics
source(paste0(getwd(), '/Calculations/Average Projections.R'), echo=TRUE)
### Add Advanced Metrics to the Fantasy Projections
source(paste0(getwd(), '/Calculations/Average Fantasy Points.R'), echo=TRUE)
source(paste0(getwd(), '/Calculations/Risk.R'), echo=TRUE)
source(paste0(getwd(), '/Calculations/Value Over Replacement.R'), echo=TRUE)
source(paste0(getwd(), '/Calculations/Cost.R'), echo=TRUE)
source(paste0(getwd(), '/Calculations/Tiers.R'), echo=TRUE)
### Condense and Finish
source(paste0(getwd(), '/File Management/Finalize Projections.R'), echo=TRUE)
### Remove the Extras
source(paste0(getwd(), '/File Management/Remove Values.R'), echo=TRUE)
}
Fantasy_Football_Projections(Week = 0, Season = 2019, Scoring = "PPR", VOR = "Standard")
Fantasy_Points$Individual.Fantasy.Points <- (
(Fantasy_Points$Passing.Yards*PPR[["pass"]][["Passing.Yards"]]) +
(Fantasy_Points$Completions*PPR[["pass"]][["Completions"]]) +
(Fantasy_Points$Passing.Touchdowns*PPR[["pass"]][["Passing.Touchdowns"]]) +
(Fantasy_Points$Interceptions*PPR[["pass"]][["Interceptions"]]) +
(Fantasy_Points$Pass.Attempts*PPR[["pass"]][["Pass.Attempts"]]) +
(Fantasy_Points$Rushing.Yards*PPR[["rush"]][["Rushing.Yards"]])+
(Fantasy_Points$Carries*PPR[["rush"]][["Carries"]])+
(Fantasy_Points$Rushing.Touchdowns*PPR[["rush"]][["Rushing.Touchdowns"]])+
(Fantasy_Points$Fumbles.Lost*PPR[["misc"]][["Fumbles.Lost"]])+
(Fantasy_Points$Receptions*PPR[["rec"]][["Receptions"]])+
(Fantasy_Points$Receiving.Yards*PPR[["rec"]][["Receiving.Yards"]])+
(Fantasy_Points$Receiving.Touchdowns*PPR[["rec"]][["Receiving.Touchdowns"]])+
(Fantasy_Points$FGM.1_39*PPR[["kick"]][["FGM.1_39"]])+
(Fantasy_Points$FGM.40_49*PPR[["kick"]][["FGM.40_49"]])+
(Fantasy_Points$FGM.50.*PPR[["kick"]][["FGM.50."]])+
(Fantasy_Points$Field.Goals.Missed*PPR[["kick"]][["Field.Goals.Missed"]])+
(Fantasy_Points$Extra.Points.Missed*PPR[["kick"]][["Extra.Points.Missed"]])+
(Fantasy_Points$FGM.XP*PPR[["kick"]][["FGM.XP"]])+
(Fantasy_Points$Return.Touchdowns*PPR[["ret"]][["Return.Touchdowns"]])+
(Fantasy_Points$`2PT.Conversion`*PPR[["misc"]][["2PT.Conversion"]])+
(Fantasy_Points$Sacks*PPR[["dst"]][["Sacks"]])+
(Fantasy_Points$Defensive.Interceptions*PPR[["dst"]][["Defensive.Interceptions"]])+
(Fantasy_Points$Fumbles.Recovered*PPR[["dst"]][["Fumbles.Recovered"]])+
(Fantasy_Points$Defensive.Touchdowns*PPR[["dst"]][["Defensive.Touchdowns"]])+
(Fantasy_Points$Points.Allowed*PPR[["dst"]][["Points.Allowed"]])+
(Fantasy_Points$Yards.Allowed*PPR[["dst"]][["Yards.Allowed"]])+
(Fantasy_Points$Safeties*PPR[["dst"]][["Safeties"]])
)
View(Combined_Projections)
View(Fantasy_Points)
### Change to Numeric
Combined_Projections$FGM.XP <- as.numeric(Combined_Projections$FGM.XP)
Combined_Projections$FGM.1_39 <- as.numeric(Combined_Projections$FGM.1_39)
Combined_Projections$FGM.40_49 <- as.numeric(Combined_Projections$FGM.40_49)
Combined_Projections$FGM.50. <- as.numeric(Combined_Projections$FGM.50.)
Fantasy_Football_Projections(Week = 0, Season = 2019, Scoring = "PPR", VOR = "Standard")
write_csv(Fantasy_Projections, "Draft Projections 2019.csv")
Fantasy_Football_Projections(Week = 0, Season = 2019, Scoring = "PPR", VOR = "Standard")
install.packages("tidyverse")
install.packages("tidyverse")
Fantasy_Football_Projections(Week = 0, Season = 2019, Scoring = "PPR", VOR = "Standard")
Average_Fantasy_Projections <- as.data.table(Average_Fantasy_Projections)
Average_Fantasy_Projections[which(Value.Rank <= 33), Cost := Average.Auction.Value * 1.1]
Average_Fantasy_Projections[which(Value.Rank >= 34 & Average_Fantasy_Projections$Value.Rank <= 66), Cost := Average.Auction.Value]
Average_Fantasy_Projections[which(Value.Rank >= 67), Cost := Average.Auction.Value * 0.9]
Fantasy_Football_Projections(Week = 0, Season = 2019, Scoring = "PPR", VOR = "Standard")
### Drop Unimportant Columns and Add Some Other Better Metrics
Fantasy_Projections <- Average_Fantasy_Projections
Fantasy_Projections[is.na(Fantasy_Projections)] <- 0
Fantasy_Projections <- Fantasy_Projections %>%
mutate(Opportunities = (Pass.Attempts + Carries + Receptions),
Value.Per.Opportunity = (VoR/Opportunities),
Fantasy.Points = Average.Fantasy.Points) %>%
select(Player, Team, Position, Bye, Average.Auction.Value, Cost, Average.Draft.Position, Games.Played, Opportunities, Tier, Value.Rank, VoR, Ceiling.VoR, Floor.VoR,
Risk, Points.Rank, Fantasy.Points, Ceiling.Fantasy.Points, Floor.Fantasy.Points) %>%
arrange(VoR, decreasing = TRUE)
View(Fantasy_Projections)
Fantasy_Projections <- Fantasy_Projections %>%
mutate(Opportunities = (Pass.Attempts + Carries + Receptions),
Value.Per.Opportunity = (VoR/Opportunities),
Fantasy.Points = Average.Fantasy.Points) %>%
select(Player, Team, Position, Bye, Average.Auction.Value, Cost, Average.Draft.Position, Games.Played, Opportunities, Tier, Value.Rank, VoR, Ceiling.VoR, Floor.VoR,
Risk, Value.Per.Opportunity, Points.Rank, Fantasy.Points, Ceiling.Fantasy.Points, Floor.Fantasy.Points) %>%
arrange(VoR, decreasing = TRUE)
View(Fantasy_Projections)
Fantasy_Projections <- Fantasy_Projections %>%
mutate(Opportunities = (Pass.Attempts + Carries + Receptions),
Value.Per.Opportunity = (VoR/Opportunities),
Fantasy.Points = Average.Fantasy.Points) %>%
select(Player, Team, Position, Bye, Average.Auction.Value, Cost, Average.Draft.Position, Games.Played, Opportunities, Tier, Value.Rank, VoR, Ceiling.VoR, Floor.VoR,
Risk, Value.Per.Opportunity, Points.Rank, Fantasy.Points, Ceiling.Fantasy.Points, Floor.Fantasy.Points) %>%
arrange("VoR", decreasing = TRUE)
Fantasy_Projections <- Fantasy_Projections %>%
mutate(Opportunities = (Pass.Attempts + Carries + Receptions),
Value.Per.Opportunity = (VoR/Opportunities),
Fantasy.Points = Average.Fantasy.Points) %>%
select(Player, Team, Position, Bye, Average.Auction.Value, Cost, Average.Draft.Position, Games.Played, Opportunities, Tier, Value.Rank, VoR, Ceiling.VoR, Floor.VoR,
Risk, Value.Per.Opportunity, Points.Rank, Fantasy.Points, Ceiling.Fantasy.Points, Floor.Fantasy.Points)
View(Fantasy_Projections)
Fantasy_Projections <- Fantasy_Projections %>%
arrange(VoR, decreasing = TRUE)
View(Fantasy_Projections)
Fantasy_Projections[is.na(Fantasy_Projections)] <- 0
Fantasy_Projections <- Fantasy_Projections %>%
arrange(VoR, decreasing = TRUE)
arrange(Fantasy_Projections, VoR)
arrange(Fantasy_Projections, VoR, decreasing = TRUE)
arrange(Fantasy_Projections, VoR, decreasing = FALSE)
arrange(Fantasy_Projections, VoR, decreasing = TRUE)
Fantasy_Projections <- Fantasy_Projections %>%
mutate(Opportunities = (Pass.Attempts + Carries + Receptions),
Value.Per.Opportunity = (VoR/Opportunities),
Fantasy.Points = Average.Fantasy.Points) %>%
select(Player, Team, Position, Bye, Average.Auction.Value, Cost, Average.Draft.Position, Games.Played, Opportunities, Tier, Value.Rank, VoR, Ceiling.VoR, Floor.VoR,
Risk, Points.Rank, Fantasy.Points, Ceiling.Fantasy.Points, Floor.Fantasy.Points) %>%
arrange(VoR, decreasing = TRUE)
### Drop Unimportant Columns and Add Some Other Better Metrics
Fantasy_Projections <- Average_Fantasy_Projections
Fantasy_Projections[is.na(Fantasy_Projections)] <- 0
Fantasy_Projections <- Fantasy_Projections %>%
mutate(Opportunities = (Pass.Attempts + Carries + Receptions),
Value.Per.Opportunity = (VoR/Opportunities),
Fantasy.Points = Average.Fantasy.Points) %>%
select(Player, Team, Position, Bye, Average.Auction.Value, Cost, Average.Draft.Position, Games.Played, Opportunities, Tier, Value.Rank, VoR, Ceiling.VoR, Floor.VoR,
Risk, Points.Rank, Fantasy.Points, Ceiling.Fantasy.Points, Floor.Fantasy.Points) %>%
arrange(VoR, decreasing = TRUE)
Fantasy_Projections <- as.data.frame(Fantasy_Projections)
Fantasy_Projections <- Fantasy_Projections %>%
mutate(Opportunities = (Pass.Attempts + Carries + Receptions),
Value.Per.Opportunity = (VoR/Opportunities),
Fantasy.Points = Average.Fantasy.Points) %>%
select(Player, Team, Position, Bye, Average.Auction.Value, Cost, Average.Draft.Position, Games.Played, Opportunities, Tier, Value.Rank, VoR, Ceiling.VoR, Floor.VoR,
Risk, Points.Rank, Fantasy.Points, Ceiling.Fantasy.Points, Floor.Fantasy.Points) %>%
arrange(VoR, decreasing = TRUE)
Fantasy_Projections <- as.data.table(Fantasy_Projections)
Fantasy_Projections <- Fantasy_Projections %>%
mutate(Opportunities = (Pass.Attempts + Carries + Receptions),
Value.Per.Opportunity = (VoR/Opportunities),
Fantasy.Points = Average.Fantasy.Points) %>%
select(Player, Team, Position, Bye, Average.Auction.Value, Cost, Average.Draft.Position, Games.Played, Opportunities, Tier, Value.Rank, VoR, Ceiling.VoR, Floor.VoR,
Risk, Points.Rank, Fantasy.Points, Ceiling.Fantasy.Points, Floor.Fantasy.Points) %>%
arrange(VoR, decreasing = TRUE)
library(tidyverse)
Fantasy_Projections <- Fantasy_Projections %>%
mutate(Opportunities = (Pass.Attempts + Carries + Receptions),
Value.Per.Opportunity = (VoR/Opportunities),
Fantasy.Points = Average.Fantasy.Points) %>%
select(Player, Team, Position, Bye, Average.Auction.Value, Cost, Average.Draft.Position, Games.Played, Opportunities, Tier, Value.Rank, VoR, Ceiling.VoR, Floor.VoR,
Risk, Points.Rank, Fantasy.Points, Ceiling.Fantasy.Points, Floor.Fantasy.Points) %>%
arrange(VoR, decreasing = TRUE)
View(Fantasy_Projections)
write_csv(Fantasy_Projections, "Fantasy Projections 2019.csv")
### Drop Unimportant Columns and Add Some Other Better Metrics
Fantasy_Projections <- Average_Fantasy_Projections
Fantasy_Projections[is.na(Fantasy_Projections)] <- 0
Fantasy_Projections <- as.data.table(Fantasy_Projections)
Fantasy_Projections <- Fantasy_Projections %>%
mutate(Opportunities = (Pass.Attempts + Carries + Receptions),
Value.Per.Opportunity = (VoR/Opportunities),
Fantasy.Points = Average.Fantasy.Points) %>%
select(Player, Team, Position, Bye, Average.Auction.Value, Cost, Average.Draft.Position, Games.Played, Opportunities, Tier, Value.Rank, VoR, Ceiling.VoR, Floor.VoR,
Risk, Points.Rank, Fantasy.Points, Ceiling.Fantasy.Points, Floor.Fantasy.Points)
Fantasy_Football_Projections(Week = 0, Season = 2019, Scoring = "PPR", VOR = "Standard")
View(Fantasy_Projections)
?require
### Create the main function.
# Week = 0 Implies the Preseason Draft Rankikngs
Fantasy_Football_Projections <- function(sources = c("CBS", "ESPN", "FantasySharks", "Sleeper", "Yahoo", "FantasyPros"), Week, Season, Scoring = c("PPR", "Standard", "Custom"), VOR = c("Standard", "Custom")) {
### Require The Packages
require("tidyverse", "dplyr", "stringr", "gtools", "mclust", "XML", "RCurl", "jsonlite", "data.table", "httr")
### Set Week and Season and Scoring Setting
assign("Scoring", Scoring, envir = .GlobalEnv)
assign("VOR", VOR, envir = .GlobalEnv)
assign("week", Week, envir = .GlobalEnv)
assign("season", Season, envir = .GlobalEnv)
### Source the Projection Files
ifelse(sources == "CBS", source(paste0(getwd(), '/Scraping Scripts/CBS Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "ESPN", source(paste0(getwd(), '/Scraping Scripts/ESPN Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "FantasySharks", source(paste0(getwd(), '/Scraping Scripts/FantasySharks Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "Sleeper", source(paste0(getwd(), '/Scraping Scripts/Sleeper Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "Yahoo", source(paste0(getwd(), '/Scraping Scripts/Yahoo Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "FantasyPros", source(paste0(getwd(), '/Scraping Scripts/FantasyPros Projections v1.R'), echo=TRUE), print(sources))
### Load Settings
source(paste0(getwd(), '/Scoring Settings.R'), echo=TRUE)
source(paste0(getwd(), '/Value Over Replacement Settings.R'), echo=TRUE)
### Combine the Projections and Clean Combined Projections
source(paste0(getwd(), '/File Management/Clean Combined Projections.R'), echo=TRUE)
### Score Fantasy Points Based on League Settings
source(paste0(getwd(), '/Calculations/Invididual Fantasy Points.R'), echo=TRUE)
### Average the Statistics
source(paste0(getwd(), '/Calculations/Average Projections.R'), echo=TRUE)
### Add Advanced Metrics to the Fantasy Projections
source(paste0(getwd(), '/Calculations/Average Fantasy Points.R'), echo=TRUE)
source(paste0(getwd(), '/Calculations/Risk.R'), echo=TRUE)
source(paste0(getwd(), '/Calculations/Value Over Replacement.R'), echo=TRUE)
source(paste0(getwd(), '/Calculations/Cost.R'), echo=TRUE)
source(paste0(getwd(), '/Calculations/Tiers.R'), echo=TRUE)
### Condense and Finish
source(paste0(getwd(), '/File Management/Finalize Projections.R'), echo=TRUE)
### Remove the Extras
source(paste0(getwd(), '/File Management/Remove Values.R'), echo=TRUE)
}
### Load the Functions
source(paste0(getwd(), '/Projections_Main.R'))
### Load the Functions
source(paste0(getwd(), '/Projections_Main.R'))
### Run the Function: Fantasy_Football_Projections(): Week = 0 implies the draft
Fantasy_Football_Projections(sources = c("CBS", "ESPN", "FantasySharks", "Sleeper", "Yahoo", "FantasyPros"), Week = 0, Season = 2019, Scoring = "PPR", VOR = "Standard")
### Create the main function.
# Week = 0 Implies the Preseason Draft Rankikngs
Fantasy_Football_Projections <- function(sources = c("CBS", "ESPN", "FantasySharks", "Sleeper", "Yahoo", "FantasyPros"), Week, Season, Scoring = c("PPR", "Standard", "Custom"), VOR = c("Standard", "Custom")) {
### Require The Packages
require("tidyverse", "dplyr", "stringr", "gtools", "mclust", "XML", "RCurl", "jsonlite", "data.table", "httr")
### Set Week and Season and Scoring Setting
assign("Scoring", Scoring, envir = .GlobalEnv)
assign("VOR", VOR, envir = .GlobalEnv)
assign("week", Week, envir = .GlobalEnv)
assign("season", Season, envir = .GlobalEnv)
### Source the Projection Files
ifelse(sources == "CBS", source(paste0(getwd(), '/Scraping Scripts/CBS Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "ESPN", source(paste0(getwd(), '/Scraping Scripts/ESPN Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "FantasySharks", source(paste0(getwd(), '/Scraping Scripts/FantasySharks Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "Sleeper", source(paste0(getwd(), '/Scraping Scripts/Sleeper Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "Yahoo", source(paste0(getwd(), '/Scraping Scripts/Yahoo Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "FantasyPros", source(paste0(getwd(), '/Scraping Scripts/FantasyPros Projections v1.R'), echo=TRUE), print(sources))
### Load Settings
source(paste0(getwd(), '/Scoring Settings.R'), echo=TRUE)
source(paste0(getwd(), '/Value Over Replacement Settings.R'), echo=TRUE)
### Combine the Projections and Clean Combined Projections
source(paste0(getwd(), '/File Management/Clean Combined Projections.R'), echo=TRUE)
### Score Fantasy Points Based on League Settings
source(paste0(getwd(), '/Calculations/Invididual Fantasy Points.R'), echo=TRUE)
### Average the Statistics
source(paste0(getwd(), '/Calculations/Average Projections.R'), echo=TRUE)
### Add Advanced Metrics to the Fantasy Projections
source(paste0(getwd(), '/Calculations/Average Fantasy Points.R'), echo=TRUE)
source(paste0(getwd(), '/Calculations/Risk.R'), echo=TRUE)
source(paste0(getwd(), '/Calculations/Value Over Replacement.R'), echo=TRUE)
source(paste0(getwd(), '/Calculations/Cost.R'), echo=TRUE)
source(paste0(getwd(), '/Calculations/Tiers.R'), echo=TRUE)
### Condense and Finish
source(paste0(getwd(), '/File Management/Finalize Projections.R'), echo=TRUE)
### Remove the Extras
source(paste0(getwd(), '/File Management/Remove Values.R'), echo=TRUE)
}
### Load the Functions
source(paste0(getwd(), '/Projections_Main.R'))
### Run the Function: Fantasy_Football_Projections(): Week = 0 implies the draft
Fantasy_Football_Projections(sources = c("CBS", "ESPN", "FantasySharks", "Sleeper", "Yahoo", "FantasyPros"), Week = 0, Season = 2019, Scoring = "PPR", VOR = "Standard")
library(jsonlite)
library(httr)
### Create the main function.
# Week = 0 Implies the Preseason Draft Rankikngs
Fantasy_Football_Projections <- function(sources = c("CBS", "ESPN", "FantasySharks", "Sleeper", "Yahoo", "FantasyPros"), Week, Season, Scoring = c("PPR", "Standard", "Custom"), VOR = c("Standard", "Custom")) {
### Require The Packages
require("tidyverse", "dplyr", "stringr", "gtools", "mclust", "XML", "RCurl", "jsonlite", "data.table", "httr")
### Set Week and Season and Scoring Setting
assign("Scoring", Scoring, envir = .GlobalEnv)
assign("VOR", VOR, envir = .GlobalEnv)
assign("week", Week, envir = .GlobalEnv)
assign("season", Season, envir = .GlobalEnv)
### Source the Projection Files
ifelse(sources == "CBS", source(paste0(getwd(), '/Scraping Scripts/CBS Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "ESPN", source(paste0(getwd(), '/Scraping Scripts/ESPN Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "FantasySharks", source(paste0(getwd(), '/Scraping Scripts/FantasySharks Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "Sleeper", source(paste0(getwd(), '/Scraping Scripts/Sleeper Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "Yahoo", source(paste0(getwd(), '/Scraping Scripts/Yahoo Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "FantasyPros", source(paste0(getwd(), '/Scraping Scripts/FantasyPros Projections v1.R'), echo=TRUE), print(sources))
### Load Settings
source(paste0(getwd(), '/Scoring Settings.R'), echo=TRUE)
source(paste0(getwd(), '/Value Over Replacement Settings.R'), echo=TRUE)
### Combine the Projections and Clean Combined Projections
source(paste0(getwd(), '/File Management/Clean Combined Projections.R'), echo=TRUE)
### Score Fantasy Points Based on League Settings
source(paste0(getwd(), '/Calculations/Invididual Fantasy Points.R'), echo=TRUE)
### Average the Statistics
source(paste0(getwd(), '/Calculations/Average Projections.R'), echo=TRUE)
### Add Advanced Metrics to the Fantasy Projections
source(paste0(getwd(), '/Calculations/Average Fantasy Points.R'), echo=TRUE)
source(paste0(getwd(), '/Calculations/Risk.R'), echo=TRUE)
source(paste0(getwd(), '/Calculations/Value Over Replacement.R'), echo=TRUE)
source(paste0(getwd(), '/Calculations/Cost.R'), echo=TRUE)
source(paste0(getwd(), '/Calculations/Tiers.R'), echo=TRUE)
### Condense and Finish
source(paste0(getwd(), '/File Management/Finalize Projections.R'), echo=TRUE)
### Remove the Extras
source(paste0(getwd(), '/File Management/Remove Values.R'), echo=TRUE)
}
### Load the Functions
source(paste0(getwd(), '/Projections_Main.R'))
### Run the Function: Fantasy_Football_Projections(): Week = 0 implies the draft
Fantasy_Football_Projections(sources = c("CBS", "ESPN", "FantasySharks", "Sleeper", "Yahoo", "FantasyPros"), Week = 0, Season = 2019, Scoring = "PPR", VOR = "Standard")
### Create the main function.
# Week = 0 Implies the Preseason Draft Rankikngs
Fantasy_Football_Projections <- function(sources = c("CBS", "ESPN", "FantasySharks", "Sleeper", "Yahoo", "FantasyPros"), Week, Season, Scoring = c("PPR", "Standard", "Custom"), VOR = c("Standard", "Custom")) {
### Require The Packages
require("tidyverse", "dplyr", "stringr", "gtools", "mclust")
require("XML", "RCurl", "jsonlite", "data.table", "httr")
### Set Week and Season and Scoring Setting
assign("Scoring", Scoring, envir = .GlobalEnv)
assign("VOR", VOR, envir = .GlobalEnv)
assign("week", Week, envir = .GlobalEnv)
assign("season", Season, envir = .GlobalEnv)
### Source the Projection Files
ifelse(sources == "CBS", source(paste0(getwd(), '/Scraping Scripts/CBS Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "ESPN", source(paste0(getwd(), '/Scraping Scripts/ESPN Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "FantasySharks", source(paste0(getwd(), '/Scraping Scripts/FantasySharks Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "Sleeper", source(paste0(getwd(), '/Scraping Scripts/Sleeper Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "Yahoo", source(paste0(getwd(), '/Scraping Scripts/Yahoo Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "FantasyPros", source(paste0(getwd(), '/Scraping Scripts/FantasyPros Projections v1.R'), echo=TRUE), print(sources))
### Load Settings
source(paste0(getwd(), '/Scoring Settings.R'), echo=TRUE)
source(paste0(getwd(), '/Value Over Replacement Settings.R'), echo=TRUE)
### Combine the Projections and Clean Combined Projections
source(paste0(getwd(), '/File Management/Clean Combined Projections.R'), echo=TRUE)
### Score Fantasy Points Based on League Settings
source(paste0(getwd(), '/Calculations/Invididual Fantasy Points.R'), echo=TRUE)
### Average the Statistics
source(paste0(getwd(), '/Calculations/Average Projections.R'), echo=TRUE)
### Add Advanced Metrics to the Fantasy Projections
source(paste0(getwd(), '/Calculations/Average Fantasy Points.R'), echo=TRUE)
source(paste0(getwd(), '/Calculations/Risk.R'), echo=TRUE)
source(paste0(getwd(), '/Calculations/Value Over Replacement.R'), echo=TRUE)
source(paste0(getwd(), '/Calculations/Cost.R'), echo=TRUE)
source(paste0(getwd(), '/Calculations/Tiers.R'), echo=TRUE)
### Condense and Finish
source(paste0(getwd(), '/File Management/Finalize Projections.R'), echo=TRUE)
### Remove the Extras
source(paste0(getwd(), '/File Management/Remove Values.R'), echo=TRUE)
}
### Run the Function: Fantasy_Football_Projections(): Week = 0 implies the draft
Fantasy_Football_Projections(sources = c("CBS", "ESPN", "FantasySharks", "Sleeper", "Yahoo", "FantasyPros"), Week = 0, Season = 2019, Scoring = "PPR", VOR = "Standard")
### Create the main function.
# Week = 0 Implies the Preseason Draft Rankikngs
Fantasy_Football_Projections <- function(sources = c("CBS", "ESPN", "FantasySharks", "Sleeper", "Yahoo", "FantasyPros"), Week, Season, Scoring = c("PPR", "Standard", "Custom"), VOR = c("Standard", "Custom")) {
### Set Week and Season and Scoring Setting
assign("Scoring", Scoring, envir = .GlobalEnv)
assign("VOR", VOR, envir = .GlobalEnv)
assign("week", Week, envir = .GlobalEnv)
assign("season", Season, envir = .GlobalEnv)
### Source the Projection Files
ifelse(sources == "CBS", source(paste0(getwd(), '/Scraping Scripts/CBS Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "ESPN", source(paste0(getwd(), '/Scraping Scripts/ESPN Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "FantasySharks", source(paste0(getwd(), '/Scraping Scripts/FantasySharks Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "Sleeper", source(paste0(getwd(), '/Scraping Scripts/Sleeper Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "Yahoo", source(paste0(getwd(), '/Scraping Scripts/Yahoo Projections v1.R'), echo=TRUE), print(sources))
ifelse(sources == "FantasyPros", source(paste0(getwd(), '/Scraping Scripts/FantasyPros Projections v1.R'), echo=TRUE), print(sources))
### Load Settings
source(paste0(getwd(), '/Scoring Settings.R'), echo=TRUE)
source(paste0(getwd(), '/Value Over Replacement Settings.R'), echo=TRUE)
### Combine the Projections and Clean Combined Projections
source(paste0(getwd(), '/File Management/Clean Combined Projections.R'), echo=TRUE)
### Score Fantasy Points Based on League Settings
source(paste0(getwd(), '/Calculations/Invididual Fantasy Points.R'), echo=TRUE)
### Average the Statistics
source(paste0(getwd(), '/Calculations/Average Projections.R'), echo=TRUE)
### Add Advanced Metrics to the Fantasy Projections
source(paste0(getwd(), '/Calculations/Average Fantasy Points.R'), echo=TRUE)
source(paste0(getwd(), '/Calculations/Risk.R'), echo=TRUE)
source(paste0(getwd(), '/Calculations/Value Over Replacement.R'), echo=TRUE)
source(paste0(getwd(), '/Calculations/Cost.R'), echo=TRUE)
source(paste0(getwd(), '/Calculations/Tiers.R'), echo=TRUE)
### Condense and Finish
source(paste0(getwd(), '/File Management/Finalize Projections.R'), echo=TRUE)
### Remove the Extras
source(paste0(getwd(), '/File Management/Remove Values.R'), echo=TRUE)
}
### Run the Function: Fantasy_Football_Projections(): Week = 0 implies the draft
Fantasy_Football_Projections(sources = c("CBS", "ESPN", "FantasySharks", "Sleeper", "Yahoo", "FantasyPros"), Week = 0, Season = 2019, Scoring = "PPR", VOR = "Standard")
getwd()
View(Player_Scores_2)
